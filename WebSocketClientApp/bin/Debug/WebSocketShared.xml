<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WebSocketShared</name>
    </assembly>
    <members>
        <member name="T:HenE.WebSocketExample.Shared.Commands.CommandHandler">
            <summary>
            base class voor de commandHandler.
            </summary>
        </member>
        <member name="M:HenE.WebSocketExample.Shared.Commands.CommandHandler.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HenE.WebSocketExample.Shared.Commands.CommandHandler"/> class.
            </summary>
        </member>
        <member name="T:HenE.WebSocketExample.Shared.Infrastructure.WebsocketBase">
            <summary>
            De class van de web socket.
            </summary>
        </member>
        <member name="M:HenE.WebSocketExample.Shared.Infrastructure.WebsocketBase.StartListeningAsync(System.Net.Sockets.NetworkStream,System.Net.Sockets.TcpClient)">
            <summary>
            Hier gaat de server starten.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
            <param name="stream">De stream.</param>
            <param name="client">De client.</param>
        </member>
        <member name="M:HenE.WebSocketExample.Shared.Infrastructure.WebsocketBase.ProcessReturnMessage(System.String,System.Collections.Generic.List{System.Net.Sockets.TcpClient})">
            <summary>
            Resend the message to two cleints.
            </summary>
            <param name="returnMessage">De message.</param>
            <param name="receivingClients">List of the clients.</param>
        </member>
        <member name="M:HenE.WebSocketExample.Shared.Infrastructure.WebsocketBase.ProcessReturnMessage(System.String,System.Net.Sockets.TcpClient)">
            <summary>
            Resend the message to one client.
            </summary>
            <param name="returnMessage">De message.</param>
            <param name="receivingClient">De client die de massage naar hem gaat leveren. </param>
        </member>
        <member name="M:HenE.WebSocketExample.Shared.Infrastructure.WebsocketBase.ProcessStream(System.String,System.Net.Sockets.TcpClient)">
            <summary>
            De process stream tussen de server en de client.
            </summary>
            <param name="stream">De stream.</param>
            <param name="client">De client.</param>
            <returns>De message.</returns>
        </member>
        <member name="M:HenE.WebSocketExample.Shared.Infrastructure.WebsocketBase.SendMessage(System.Net.Sockets.TcpClient,System.String)">
            <summary>
            Die method stuur de info naar de cleinten.
            </summary>
            <param name="client">Een client.</param>
            <param name="message"> De information.</param>
            <returns>Stream.</returns>
        </member>
        <member name="M:HenE.WebSocketExample.Shared.Infrastructure.WebsocketBase.SendMessageAsync(System.Net.Sockets.TcpClient,System.String)">
            <summary>
            Die stuur de berecht af.
            </summary>
            <param name="client">client.</param>
            <param name="message">message.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the result of the asynchronous operation.</returns>
        </member>
    </members>
</doc>
